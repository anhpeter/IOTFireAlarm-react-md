{"version":3,"sources":["components/AppLink.js","components/Header.js","constants/app_constant.js","apis/RoomApi.js","components/RoomExcerpt.js","components/RoomList.js","pages/HomePage.js","common/Data.js","components/ChartTimeBar.js","helper/Helper.js","components/Clock.js","apis/StatusApi.js","helper/ChartHeper.js","components/Alert.js","components/StatusChart.js","components/RealtimeChart.js","pages/RoomPage.js","assets/alarms/alarm1.mp3","App.js","reportWebVitals.js","index.js"],"names":["AppLink","children","to","className","Header","API_DOMAIN","RoomApi","fetchItems","a","fetch","then","response","json","data","payload","fetchItemById","_id","Image","styled","img","Wrapper","div","Warning","RoomExcerpt","id","imageUrl","name","useSocket","socket","useState","isWarning","setWarning","useEffect","on","gas","flame","src","alt","RoomList","rooms","setRooms","items","roomsHtml","map","item","HomePage","ChartTimeData","value","text","ChartTimeBar","chartTimeInHour","onTimeChange","buttons","color","onClick","bind","type","role","Helper","strPad","length","c","repeat","Content","span","Clock","timeStr","Date","date","setDate","setInterval","h","getHours","m","getMinutes","s","getSeconds","StatusApi","fetchLastItemsByRoomId","qty","fetchLastItemsAfterTimeByRoomId","ChartHelper","time","this","timelineLength","getTimelineLength","genDefaultData","gasData","flameData","labels","i","groupStatus","timelineIndexes","getTimelineIndexesForNewStatuses","idx","getStatus","getLabel","dateStr","d","setMinutes","setHours","setSeconds","setMilliseconds","toString","obj","prev","getGroupStatusKey","forEach","index","isLastItem","key","groupTime","result","t","Math","abs","diff","ceil","push","defaultData","Array","_","slice","getDate","field","M","getMonth","toISOString","Alert","StatusChart","options","maintainAspectRatio","scales","y","beginAtZero","animation","duration","responsive","interaction","mode","intersect","stacked","plugins","title","display","font","size","weight","lineHeight","datasets","label","fill","backgroundColor","borderColor","borderDash","height","ChartContainer","RealtimeChart","room","hasDummyRealtimeStatus","isLoading","setLoading","defaultFlames","defaultGases","defaultLabels","setGasData","setFlameData","setLabels","realtimeLabels","setRealtimeLabels","realtimeFlames","setRealtimeFlames","realtimeGases","setRealtimeGases","console","log","status","lbl","off","getFetchTime","reverse","chartHelper","genData","error","gasDs","flameDs","labelDs","ChartTimeItem","find","chartTitle","TitleWrapper","ToolBar","RoomPage","useParams","undefined","setItem","setChartTimeInHour","fetchItem","r","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4ba58aa.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function AppLink({ children, to }) {\r\n    return (\r\n        <Link className=\"link-no-style\" to={to}>\r\n            {children}\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport AppLink from './AppLink'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <AppLink to=\"/\">\r\n                    <h2>Hotel Management</h2>\r\n                </AppLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const IS_DEV = false;\r\nexport const API_DOMAIN = IS_DEV\r\n    ? 'http://localhost:5000'\r\n    : 'https://it3-fire-api.herokuapp.com';","import { API_DOMAIN } from \"../constants/app_constant\";\r\n\r\nconst RoomApi = {\r\n    fetchItems: async function () {\r\n        return fetch(`${API_DOMAIN}/room`)\r\n            .then(response => response.json())\r\n            .then(data => data.payload);\r\n    },\r\n\r\n    fetchItemById: async function (_id) {\r\n        return fetch(`${API_DOMAIN}/room/get-by-id/${_id}`)\r\n            .then(response => response.json())\r\n            .then(data => data.payload);\r\n    }\r\n}\r\n\r\nexport default RoomApi;","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport useSocket from 'use-socket.io-client';\r\nimport { API_DOMAIN } from '../constants/app_constant';\r\nimport AppLink from './AppLink';\r\n\r\n\r\nconst Image = styled.img`\r\n    width: 100%;\r\n    object-fit:cover;\r\n    aspect-ratio:3/2;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: relative;\r\n    border-radius:10px;\r\n    overflow:hidden;\r\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\r\n`;\r\n\r\nconst Warning = styled.div`\r\n    position: absolute;\r\n    top:0;\r\n    bottom:0;\r\n    right:0;\r\n    left:0;\r\n    text-transform: uppercase;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    color: white;\r\n    font-size: 22px;\r\n    background-color: rgba(247,15,15,.7);\r\n    z-index:1;\r\n    font-weight: bold;\r\n`\r\n\r\nexport default function RoomExcerpt({ id, imageUrl, name }) {\r\n    const [socket] = useSocket(API_DOMAIN);\r\n    const [isWarning, setWarning] = useState(false);\r\n\r\n    useEffect(() => {\r\n        socket.on(`SERVER_EMIT_ROOM_WITH_STATUS_${id}`, (data) => {\r\n            if (data.gas === 0 || data.flame === 0) {\r\n                setWarning(true);\r\n            } else {\r\n                setWarning(false);\r\n            }\r\n        });\r\n    }, [id, socket, setWarning]);\r\n\r\n    return (\r\n        <div>\r\n            <AppLink to={'/room/' + id}>\r\n                <Wrapper>\r\n                    <Image src={imageUrl} alt=\"\" />\r\n                    {\r\n                        isWarning ? <Warning>{name}</Warning> : null\r\n                    }\r\n                    {\r\n                        isWarning ? null : <h5 className=\"text-center py-2\">{name}</h5>\r\n                    }\r\n                </Wrapper>\r\n            </AppLink>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport RoomApi from '../apis/RoomApi';\r\nimport RoomExcerpt from './RoomExcerpt'\r\n\r\n\r\nexport default function RoomList() {\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const items = await RoomApi.fetchItems();\r\n                setRooms(items);\r\n            }catch(e){}\r\n        }\r\n        fetchItems();\r\n    }, [setRooms]);\r\n\r\n    const roomsHtml = rooms.map(item => {\r\n        return (\r\n            <div key={item._id} className=\"col-md-4 vitri mb-4\">\r\n                <RoomExcerpt id={item._id} imageUrl={item.imageUrl} name={item.name} />\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {roomsHtml}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport RoomList from '../components/RoomList'\r\n\r\nexport default function HomePage() {\r\n    return (\r\n            <RoomList />\r\n    )\r\n}\r\n","export const ChartTimeData = [\r\n    {\r\n        value: -1,\r\n        text: 'Realtime',\r\n    },\r\n    {\r\n        value: 1,\r\n        text: '1 hour',\r\n    },\r\n    {\r\n        value: 24,\r\n        text: '1 day',\r\n    },\r\n    {\r\n        value: 24 * 7,\r\n        text: '7 days',\r\n    },\r\n    {\r\n        value: 24 * 15,\r\n        text: '15 days',\r\n    },\r\n    {\r\n        value: 24 * 30,\r\n        text: '30 days',\r\n    },\r\n    {\r\n        value: 24 * 30 * 3,\r\n        text: '90 days',\r\n    },\r\n]","import React from 'react'\r\nimport { ChartTimeData } from '../common/Data';\r\n\r\nexport default function ChartTimeBar({ chartTimeInHour, onTimeChange }) {\r\n    const buttons = ChartTimeData.map(item => {\r\n        const color = item.value === chartTimeInHour ? 'btn-primary' : 'btn-light';\r\n        return <button key={item.value} onClick={onTimeChange.bind(this, item.value)} type=\"button\" className={`btn ${color}`}>{item.text}</button>\r\n    })\r\n    return (\r\n        <div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"\">\r\n                {buttons}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const Helper = {\r\n    strPad: function (value, length, c) {\r\n        value = value + '';\r\n        if (value) {\r\n            return value.length >= length\r\n                ? value\r\n                : c.repeat(length - value.length) + value;\r\n        }\r\n        return value;\r\n    }\r\n}\r\nexport default Helper;","import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport Helper from '../helper/Helper';\r\n\r\nconst Content = styled.span`\r\n    font-size:1.5rem;\r\n`;\r\n\r\nexport default function Clock(timeStr) {\r\n    const [date, setDate] = useState(new Date());\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n    }, [setDate])\r\n\r\n    const h = Helper.strPad(date.getHours(), 2, '0');\r\n    const m = Helper.strPad(date.getMinutes(), 2, '0');\r\n    const s = Helper.strPad(date.getSeconds(), 2, '0');\r\n    return (\r\n        <Content>{h}:{m}:{s}\"</Content>\r\n    )\r\n}\r\n","import { API_DOMAIN } from \"../constants/app_constant\";\r\n\r\nconst StatusApi = {\r\n    fetchLastItemsByRoomId: function (_id, qty) {\r\n        return fetch(`${API_DOMAIN}/room-status/get-last-items-by-room-id/${_id}?qty=${qty}`)\r\n            .then(response => response.json())\r\n            .then(data => data.payload);\r\n    },\r\n    fetchLastItemsAfterTimeByRoomId: function (_id, timeStr) {\r\n        return fetch(`${API_DOMAIN}/room-status/get-last-items-after-time/${_id}?time=${timeStr}`)\r\n            .then(response => response.json())\r\n            .then(data => data.payload);\r\n    }\r\n}\r\nexport default StatusApi;","import Helper from \"./Helper\";\r\n\r\nclass ChartHelper {\r\n\r\n    constructor(time, items) {\r\n        this.time = time;\r\n        this.items = items;\r\n        this.timelineLength = this.getTimelineLength()\r\n    }\r\n\r\n    // GEN\r\n    genData() {\r\n        const { gasData, flameData, labels } = this.genDefaultData(this.time);\r\n\r\n        let i = 0;\r\n        const groupStatus = this.groupStatus();\r\n        const timelineIndexes = this.getTimelineIndexesForNewStatuses(groupStatus);\r\n        for (let time in groupStatus) {\r\n            const item = {\r\n                ...groupStatus[time],\r\n                date: time,\r\n            };\r\n            const idx = timelineIndexes[i];\r\n            gasData[idx] = ChartHelper.getStatus(item, 'gas');\r\n            flameData[idx] = ChartHelper.getStatus(item, 'flame')\r\n            labels[idx] = ChartHelper.getLabel(item, this.time);\r\n            i++;\r\n        }\r\n        return { gasData, flameData, labels };\r\n    }\r\n\r\n    genDefaultData() {\r\n        return ChartHelper.genDefaultData(this.time);\r\n    }\r\n\r\n    static genDefaultData(time) {\r\n        let gasData, flameData, labels;\r\n        if (time > -1) {\r\n            //\r\n            const timelineLength = ChartHelper.getTimelineLength(time);\r\n            const defaultData = [...Array(timelineLength)].map(_ => 0);\r\n            gasData = defaultData.slice(0);\r\n            flameData = defaultData.slice(0);\r\n            labels = defaultData.slice(0).map((item, index) => {\r\n                const d = new Date();\r\n                if (time < 24) {\r\n                    d.setMinutes(d.getMinutes() - (timelineLength - index) + 1)\r\n                } else if (time < 720) {\r\n                    d.setHours(d.getHours() - (timelineLength - index) + 1)\r\n                } else {\r\n                    d.setDate(d.getDate() - (timelineLength - index) + 1)\r\n                }\r\n                return this.getLabel({\r\n                    date: d,\r\n                }, time)\r\n            })\r\n        } else {\r\n            const defaultData = [...Array(30)].map(_ => 0);\r\n            gasData = defaultData.slice(0);\r\n            flameData = defaultData.slice(0);\r\n            labels = defaultData.slice(0).map(_=>'');\r\n        }\r\n        return { gasData, flameData, labels }\r\n    }\r\n\r\n    // GROUP STATUSES\r\n    getGroupStatusKey(dateStr) {\r\n        const d = new Date(dateStr);\r\n        if (this.time >= 24) {\r\n            d.setMinutes(0);\r\n            if (this.time >= 720) {\r\n                d.setHours(0);\r\n            }\r\n        }\r\n        d.setSeconds(0);\r\n        d.setMilliseconds(0);\r\n        return d.toString();\r\n    }\r\n\r\n    groupStatus() {\r\n        const obj = {};\r\n        if (this.items.length > 0) {\r\n            let gas = 1;\r\n            let flame = 1;\r\n            let prev = this.getGroupStatusKey(this.items[0].date);\r\n            this.items.forEach((item, index) => {\r\n\r\n                // set values\r\n                const isLastItem = this.items.length - 1 === index;\r\n                const key = this.getGroupStatusKey(item.date);\r\n                if (!obj[key]) {\r\n                    // new timestamp or last item\r\n                    if (!!prev) {\r\n                        // update prev \r\n                        obj[prev] = {\r\n                            gas, flame\r\n                        }\r\n                    }\r\n                    // set \r\n                    gas = 1;\r\n                    flame = 1;\r\n                    prev = key;\r\n                    obj[key] = true;\r\n                }\r\n\r\n                //\r\n                if (item.gas === 0) gas = 0;\r\n                if (item.flame === 0) flame = 0;\r\n\r\n                // last item\r\n                if (isLastItem) { obj[key] = { gas, flame } };\r\n            })\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    // HELPER METHODS\r\n    static getStatus(item, field) {\r\n        return item[field] === 1 ? 0 : 1;\r\n    }\r\n\r\n    static getLabel(item, chartTimeInHour) {\r\n        const date = new Date(item.date);\r\n        const M = Helper.strPad(date.getMonth() + 1, 2, '0');\r\n        const d = Helper.strPad(date.getDate(), 2, '0');\r\n        const h = Helper.strPad(date.getHours(), 2, '0');\r\n        const m = Helper.strPad(date.getMinutes(), 2, '0');\r\n        if (chartTimeInHour < 24) return `${h}:${m}`;\r\n        if (chartTimeInHour >= 720) return `${d}/${M}`\r\n        return `${d}/${M} ${h}:${m}`;\r\n    }\r\n\r\n    static getFetchTime(chartTimeInHour) {\r\n        const d = new Date();\r\n        const h = d.getHours();\r\n        if (chartTimeInHour === 1) {\r\n            d.setHours(h - chartTimeInHour);\r\n        } else {\r\n            d.setHours(h - chartTimeInHour);\r\n        }\r\n        return d.toISOString();\r\n    }\r\n    getTimelineLength() {\r\n        return ChartHelper.getTimelineLength(this.time);\r\n    }\r\n\r\n    getTimelineIndexesForNewStatuses(groupTime) {\r\n        const result = [];\r\n        for (let time in groupTime) {\r\n            let t = 1000 * 60;\r\n            if (this.time >= 24) {\r\n                t *= 60;\r\n                if (this.time >= 720) t *= 24;\r\n            }\r\n            const d = Math.abs(new Date() - new Date(time));\r\n            const diff = Math.ceil(d / t);\r\n            const index = this.timelineLength - diff;\r\n            result.push(index);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getTimelineLength(time) {\r\n        if (time < 24) return time * 60;\r\n        if (time >= 720) return Math.ceil(time / 24);\r\n        return time;\r\n    }\r\n}\r\nexport default ChartHelper;","import React from 'react'\r\n\r\nexport default function Alert({ children, color = 'primary' }) {\r\n    return (\r\n        <div className={`alert alert-${color} text-center`} role=\"alert\">{children}</div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    box-shadow: rgba(0, 0, 0, 0.45) 0px 25px 20px -20px;\r\n`;\r\n\r\nconst StatusChart = ({ labels, gasData, flameData, title }) => {\r\n    const options = {\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true\r\n            },\r\n\r\n        },\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        responsive: true,\r\n        interaction: {\r\n            mode: 'index',\r\n            intersect: false,\r\n        },\r\n        stacked: false,\r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n                text: title,\r\n                font: {\r\n                    size: 22,\r\n                    weight: 'bold',\r\n                    lineHeight: 1.2,\r\n                },\r\n            },\r\n        },\r\n    };\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Gas',\r\n                data: gasData,\r\n                fill: false,\r\n                backgroundColor: '#dbdbdb',\r\n                borderColor: '#8c8c8c',\r\n                borderDash: [10, 5]\r\n            },\r\n            {\r\n                label: 'Flame',\r\n                data: flameData,\r\n                fill: false,\r\n                backgroundColor: '#FFB1C1',\r\n                borderColor: '#FF6384',\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Wrapper>\r\n                <Line height={250} data={data} options={options} />\r\n            </Wrapper>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default StatusChart;","import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport useSocket from 'use-socket.io-client';\r\nimport StatusApi from '../apis/StatusApi';\r\nimport { API_DOMAIN } from '../constants/app_constant';\r\nimport { ChartTimeData } from '../common/Data';\r\nimport ChartHelper from '../helper/ChartHeper';\r\nimport Alert from './Alert';\r\nimport StatusChart from './StatusChart';\r\n\r\nconst ChartContainer = styled.div`\r\n    height:400px;\r\n`;\r\n\r\nexport default function RealtimeChart({ item: room, chartTimeInHour, hasDummyRealtimeStatus }) {\r\n    const [socket] = useSocket(API_DOMAIN);\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    // data\r\n    const { flameData: defaultFlames, gasData: defaultGases, labels: defaultLabels } = ChartHelper.genDefaultData(chartTimeInHour);\r\n    const [gasData, setGasData] = useState(defaultGases);\r\n    const [flameData, setFlameData] = useState(defaultFlames);\r\n    const [labels, setLabels] = useState(defaultLabels);\r\n\r\n    const [realtimeLabels, setRealtimeLabels] = useState(defaultLabels);\r\n    const [realtimeFlames, setRealtimeFlames] = useState(defaultFlames);\r\n    const [realtimeGases, setRealtimeGases] = useState(defaultGases);\r\n\r\n    // SOCKET\r\n    useEffect(() => {\r\n\r\n        // LISTEN STATUS\r\n        socket.on(`SERVER_EMIT_ROOM_WITH_STATUS_${room._id}`, (data) => {\r\n            console.log('socket data', data)\r\n            setRealtimeGases(items => {\r\n                const status = ChartHelper.getStatus(data, ['gas']);\r\n                return items.length === 0 ? [status] : [...items.slice(1), status];\r\n            })\r\n            setRealtimeFlames(items => {\r\n                const status = ChartHelper.getStatus(data, ['flame']);\r\n                return items.length === 0 ? [status] : [...items.slice(1), status];\r\n            })\r\n            setRealtimeLabels(items => {\r\n                const lbl = ChartHelper.getLabel(data, chartTimeInHour);\r\n                return items.length === 0 ? [lbl] : [...items.slice(1), lbl];\r\n            })\r\n        });\r\n        return () => {\r\n            socket.off(`SERVER_EMIT_ROOM_WITH_STATUS_${room._id}`);\r\n        }\r\n    }, [room._id, chartTimeInHour, hasDummyRealtimeStatus, socket])\r\n\r\n    // FETCHES\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            setLoading(true);\r\n            try {\r\n\r\n                // fetch\r\n                let items = await StatusApi.fetchLastItemsAfterTimeByRoomId(room._id, ChartHelper.getFetchTime(chartTimeInHour))\r\n                items = items.reverse();\r\n                const chartHelper = new ChartHelper(chartTimeInHour, items);\r\n\r\n                // gen data\r\n                const { gasData, flameData, labels } = chartHelper.genData(items);\r\n                setGasData(gasData);\r\n                setFlameData(flameData);\r\n                setLabels(labels);\r\n            } catch (e) {\r\n                console.error(e)\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n        fetch();\r\n    }, [room._id, chartTimeInHour, setGasData, setLabels, setFlameData])\r\n\r\n    const ChartTimeItem = ChartTimeData.find(item => item.value === chartTimeInHour);\r\n    const chartTitle = chartTimeInHour < 24 ? `Realtime status` : `Last ${ChartTimeItem.text}`\r\n\r\n    let gasDs, flameDs, labelDs;\r\n    if (chartTimeInHour === -1) {\r\n        gasDs = realtimeGases;\r\n        flameDs = realtimeFlames;\r\n        labelDs = realtimeLabels;\r\n    } else {\r\n        gasDs = gasData;\r\n        flameDs = flameData;\r\n        labelDs = labels;\r\n    }\r\n    return (\r\n        <div className=\"card border-0\">\r\n            <ChartContainer className=\"card-body\" >\r\n                {\r\n                    !isLoading\r\n                        ? <StatusChart title={chartTitle} gasData={gasDs} flameData={flameDs} labels={labelDs} />\r\n                        : <Alert color=\"info\">Loading ...</Alert>\r\n                }\r\n            </ChartContainer>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport RoomApi from '../apis/RoomApi';\r\nimport ChartTimeBar from '../components/ChartTimeBar';\r\nimport Clock from '../components/Clock';\r\nimport DummyRealtimeStatusToggler from '../components/DummyRealtimeStatusToggler';\r\nimport RealtimeChart from '../components/RealtimeChart';\r\n\r\nconst TitleWrapper = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-between;\r\n`;\r\nconst Image = styled.img`\r\n    aspect-ratio:3/2;\r\n    border-radius:10px;\r\n    max-width:100%;\r\n     box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\r\n`\r\nconst ToolBar = styled.div`\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    margin-bottom: .5rem;\r\n    @media (max-width: 576px){ \r\n        max-width: 800px;\r\n        flex-direction:column-reverse;\r\n        align-items:center;\r\n        >*{\r\n            margin-bottom:.5rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport default function RoomPage() {\r\n    let { id } = useParams();\r\n    const [item, setItem] = useState(undefined);\r\n    const [hasDummyRealtimeStatus, setDummyRealtimeStatus] = useState(false);\r\n    const [chartTimeInHour, setChartTimeInHour] = useState(-1);\r\n    useEffect(() => {\r\n        const fetchItem = async () => {\r\n            const r = await RoomApi.fetchItemById(id)\r\n            setItem(r);\r\n        }\r\n        fetchItem();\r\n    }, [id, setItem]);\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                {\r\n                    !!item\r\n                        ?\r\n                        <>\r\n                            <div className=\"row mb-4\">\r\n                                <div className=\"col-12\">\r\n                                    <TitleWrapper>\r\n                                        <h1>{item.name}</h1>\r\n                                        <Clock />\r\n                                    </TitleWrapper>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"offset-sm-4 col-sm-4 mb-3\" >\r\n                                    <Image src={item.imageUrl} alt=\"\" />\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <ToolBar>\r\n                                        <ChartTimeBar chartTimeInHour={chartTimeInHour} onTimeChange={setChartTimeInHour} />\r\n                                        {/* {\r\n                                            chartTimeInHour < 24\r\n                                                ? <DummyRealtimeStatusToggler setDummyRealtimeStatus={setDummyRealtimeStatus} hasDummyRealtimeStatus={hasDummyRealtimeStatus} />\r\n                                                : null\r\n                                        } */}\r\n                                    </ToolBar>\r\n                                    <RealtimeChart chartTimeInHour={chartTimeInHour} item={item} hasDummyRealtimeStatus={hasDummyRealtimeStatus} />\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                        : null\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/alarm1.411f5645.mp3\";","import './App.css';\r\nimport Header from './components/Header';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\nimport HomePage from './pages/HomePage';\r\nimport RoomPage from './pages/RoomPage';\r\nimport styled from 'styled-components';\r\nimport AlarmSound from './components/AlarmSound';\r\n\r\nconst Wrapper = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    min-height:100vh;\r\n`;\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <HashRouter>\r\n            <Wrapper>\r\n                <Header></Header>\r\n\r\n                <div className=\"main\">\r\n                    <Switch>\r\n                        <Route path=\"/room/:id\">\r\n                            <RoomPage />\r\n                        </Route>\r\n                        <Route path=\"/\" exact>\r\n                            <HomePage />\r\n                        </Route>\r\n                        {/* <Route path=\"*\">\r\n                            <Redirect to=\"/\" />\r\n                        </Route> */}\r\n                    </Switch>\r\n                </div>\r\n                {/* <AlarmSound /> */}\r\n            </Wrapper>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}