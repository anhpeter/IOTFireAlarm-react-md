{"version":3,"sources":["components/Footer.js","components/Header.js","app_constant.js","apis/RoomApi.js","components/RoomExcerpt.js","components/RoomList.js","pages/HomePage.js","components/ChartTimeBar.js","helper/Helper.js","components/Clock.js","apis/StatusApi.js","helper/ChartHeper.js","components/StatusChart.js","components/RealtimeChart.js","pages/RoomPage.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Header","API_DOMAIN","RoomApi","fetchItems","a","fetch","then","response","json","data","payload","fetchItemById","_id","Image","styled","img","Wrapper","div","Warning","RoomExcerpt","id","imageUrl","name","useSocket","socket","useState","isWarning","setWarning","useEffect","on","gas","flame","to","src","alt","RoomList","rooms","setRooms","items","console","warn","roomsHtml","map","item","HomePage","ChartTimeBar","chartTimeInHour","onTimeChange","buttons","value","text","color","onClick","bind","type","role","Helper","strPad","length","c","repeat","Content","span","Clock","timeStr","Date","date","setDate","setInterval","h","getHours","m","getMinutes","s","getSeconds","StatusApi","fetchLastItemsByRoomId","qty","fetchLastItemsAfterTimeByRoomId","ChartHelper","time","this","timelineLength","getTimelineLength","obj","prev","forEach","d","setMinutes","setSeconds","setMilliseconds","key","toISOString","log","genDefaultData","gasData","flameData","labels","itemsIndexes","getTimelineIndexes","i","idx","getStatus","getLabel","groupTime","groupItemsByHour","t","Math","ceil","abs","diffTime","indexCount","index","getTimelineIndex","indexes","Object","keys","field","M","getMonth","getDate","setHours","defaultData","Array","_","slice","options","scales","y","beginAtZero","animation","duration","responsive","interaction","mode","intersect","stacked","plugins","title","display","font","size","weight","lineHeight","StatusChart","datasets","label","fill","backgroundColor","borderColor","height","RealtimeChart","room","defaultFlames","defaultGases","defaultLabels","setGasData","setFlameData","setLabels","off","status","lbl","getFetchTime","reverse","chartHelper","genData","error","TitleWrapper","RoomPage","undefined","setItem","useParams","setChartTimeInHour","fetchItem","r","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcb4c47c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <p>@TH CNTT 3</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <h2>Hotel Management</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const IS_DEV = false;\r\nexport const API_DOMAIN = IS_DEV\r\n    ? 'http://localhost:5000'\r\n    : 'https://it3-fire-api.herokuapp.com';","import { API_DOMAIN } from \"../app_constant\";\r\n\r\nconst RoomApi = {\r\n    fetchItems: async function () {\r\n        return fetch(`${API_DOMAIN}/room`)\r\n            .then(response => response.json())\r\n            .then(data => data.payload);\r\n    },\r\n\r\n    fetchItemById: async function (_id) {\r\n        return fetch(`${API_DOMAIN}/room/get-by-id/${_id}`)\r\n            .then(response => response.json())\r\n            .then(data => data.payload);\r\n    }\r\n}\r\n\r\nexport default RoomApi;","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport useSocket from 'use-socket.io-client';\r\nimport { API_DOMAIN } from '../app_constant';\r\n\r\n\r\nconst Image = styled.img`\r\n    width: 100%;\r\n    object-fit:cover;\r\n    aspect-ratio:3/2;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: relative;\r\n    border-radius:10px;\r\n    overflow:hidden;\r\n`;\r\n\r\nconst Warning = styled.div`\r\n    position: absolute;\r\n    top:0;\r\n    bottom:0;\r\n    right:0;\r\n    left:0;\r\n    text-transform: uppercase;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    color: white;\r\n    font-size: 22px;\r\n    background-color: rgba(247,15,15,.7);\r\n    z-index:1;\r\n    font-weight: bold;\r\n`;\r\n\r\n\r\nexport default function RoomExcerpt({ id, imageUrl, name }) {\r\n    const [socket] = useSocket(API_DOMAIN);\r\n    const [isWarning, setWarning] = useState(false);\r\n\r\n    useEffect(() => {\r\n        socket.on(`SERVER_EMIT_ROOM_WITH_STATUS_${id}`, (data) => {\r\n            if (data.gas === 0 || data.flame === 0) {\r\n                setWarning(true);\r\n            } else {\r\n                setWarning(false);\r\n            }\r\n        });\r\n    }, [id, socket, setWarning]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Link to={'/room/' + id}>\r\n                <Wrapper>\r\n                    <Image src={imageUrl} alt=\"\" />\r\n                    {\r\n                        isWarning ? <Warning>{name}</Warning> : null\r\n                    }\r\n                </Wrapper>\r\n            </Link>\r\n            {\r\n                isWarning ? null : <h5>{name}</h5>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport RoomApi from '../apis/RoomApi';\r\nimport RoomExcerpt from './RoomExcerpt'\r\n\r\n\r\nexport default function RoomList() {\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const items = await RoomApi.fetchItems();\r\n                console.warn('rooms', items);\r\n                setRooms(items);\r\n            }catch(e){}\r\n        }\r\n        fetchItems();\r\n    }, [setRooms]);\r\n\r\n    const roomsHtml = rooms.map(item => {\r\n        return (\r\n            <div key={item._id} className=\"col-md-4 vitri mb-4\">\r\n                <RoomExcerpt id={item._id} imageUrl={item.imageUrl} name={item.name} />\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {roomsHtml}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport RoomList from '../components/RoomList'\r\n\r\nexport default function HomePage() {\r\n    return (\r\n            <RoomList />\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ChartTimeBar({ chartTimeInHour, onTimeChange }) {\r\n    const data = [\r\n        {\r\n            value: 1,\r\n            text: '1 hour',\r\n        },\r\n        {\r\n            value: 24,\r\n            text: '1 day',\r\n        },\r\n        {\r\n            value: 24 * 7,\r\n            text: '7 days',\r\n        },\r\n        {\r\n            value: 24 * 10,\r\n            text: '10 days',\r\n        },\r\n    ]\r\n    const buttons = data.map(item => {\r\n        const color = item.value === chartTimeInHour ? 'btn-primary' : 'btn-light';\r\n        return <button key={item.value} onClick={onTimeChange.bind(this, item.value)} type=\"button\" className={`btn ${color}`}>{item.text}</button>\r\n    })\r\n    return (\r\n        <div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"\">\r\n                {buttons}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const Helper = {\r\n    strPad: function (value, length, c) {\r\n        value = value + '';\r\n        if (value) {\r\n            return value.length >= length\r\n                ? value\r\n                : c.repeat(length - value.length) + value;\r\n        }\r\n        return value;\r\n    }\r\n}\r\nexport default Helper;","import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport Helper from '../helper/Helper';\r\n\r\nconst Content = styled.span`\r\n    font-size:1.5rem;\r\n`;\r\n\r\nexport default function Clock(timeStr) {\r\n    const [date, setDate] = useState(new Date());\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n    }, [setDate])\r\n\r\n    const h = Helper.strPad(date.getHours(), 2, '0');\r\n    const m = Helper.strPad(date.getMinutes(), 2, '0');\r\n    const s = Helper.strPad(date.getSeconds(), 2, '0');\r\n    return (\r\n        <Content>{h}:{m}:{s}\"</Content>\r\n    )\r\n}\r\n","import { API_DOMAIN } from \"../app_constant\";\r\n\r\nconst StatusApi = {\r\n    fetchLastItemsByRoomId: function (_id, qty) {\r\n        return fetch(`${API_DOMAIN}/room-status/get-last-items-by-room-id/${_id}?qty=${qty}`)\r\n            .then(response => response.json())\r\n            .then(data => data.payload);\r\n    },\r\n    fetchLastItemsAfterTimeByRoomId: function (_id, timeStr) {\r\n        return fetch(`${API_DOMAIN}/room-status/get-last-items-after-time/${_id}?time=${timeStr}`)\r\n            .then(response => response.json())\r\n            .then(data => data.payload);\r\n    }\r\n}\r\nexport default StatusApi;","import Helper from \"./Helper\";\r\n\r\nclass ChartHelper {\r\n\r\n    constructor(time, items) {\r\n        this.time = time;\r\n        this.items = items;\r\n        this.timelineLength = this.getTimelineLength()\r\n    }\r\n\r\n    groupItemsByHour() {\r\n        const obj = {};\r\n        if (this.time >= 24) {\r\n            let prev;\r\n            let gas = 1;\r\n            let flame = 1;\r\n            this.items.forEach(item => {\r\n                const d = new Date(item.date);\r\n                d.setMinutes(0);\r\n                d.setSeconds(0);\r\n                d.setMilliseconds(0);\r\n                const key = d.toISOString();\r\n                if (!obj[key]) {\r\n                    // new hour\r\n                    if (!!prev) {\r\n                        console.log('update prev', prev, gas, flame)\r\n                        obj[prev].gas = gas;\r\n                        obj[prev].flame = flame;\r\n                    }\r\n                    obj[key] = { gas, flame }\r\n                    gas = 1;\r\n                    flame = 1;\r\n                    prev = key;\r\n                } else {\r\n                    // old hour\r\n                    if (item.gas === 0) gas = 0;\r\n                    if (item.flame === 0) flame = 0;\r\n                }\r\n            })\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    genData(items) {\r\n        const { gasData, flameData, labels } = this.genDefaultData(this.time);\r\n        const itemsIndexes = this.getTimelineIndexes(items);\r\n\r\n        let i = 0;\r\n        if (this.time < 24) {\r\n            for (let idx of itemsIndexes) {\r\n                const item = items[i];\r\n                gasData[idx] = ChartHelper.getStatus(item, 'gas');\r\n                flameData[idx] = ChartHelper.getStatus(item, 'flame');;\r\n                labels[idx] = ChartHelper.getLabel(item, this.time);\r\n                i++;\r\n            }\r\n        } else {\r\n            const groupTime = this.groupItemsByHour();\r\n            for (let time in groupTime) {\r\n                const item = {\r\n                    ...groupTime[time],\r\n                    date: time,\r\n                };\r\n                const idx = itemsIndexes[i];\r\n                gasData[idx] = ChartHelper.getStatus(item, 'gas');\r\n                flameData[idx] = ChartHelper.getStatus(item, 'flame');;\r\n                labels[idx] = ChartHelper.getLabel(item, time);\r\n                i++;\r\n            }\r\n        }\r\n        return { gasData, flameData, labels };\r\n    }\r\n\r\n    genDefaultData() {\r\n        return ChartHelper.genDefaultData(this.time);\r\n    }\r\n\r\n    getTimelineLength() {\r\n        return ChartHelper.getTimelineLength(this.time);\r\n    }\r\n\r\n\r\n    //\r\n    static getStatus(item, field) {\r\n        return item[field] === 1 ? 0 : 1;\r\n    }\r\n\r\n    static getLabel(item, chartTimeInHour) {\r\n        const date = new Date(item.date);\r\n        const M = Helper.strPad(date.getMonth() + 1, 2, '0');\r\n        const d = Helper.strPad(date.getDate(), 2, '0');\r\n        const h = Helper.strPad(date.getHours(), 2, '0');\r\n        const m = Helper.strPad(date.getMinutes(), 2, '0');\r\n        if (chartTimeInHour < 24) {\r\n            return `${h}:${m}`;\r\n        } else if (chartTimeInHour === 24) {\r\n            return `${h}:${m}`;\r\n        } else {\r\n            return `${d}/${M} ${h}:${m}`;\r\n        }\r\n    }\r\n\r\n    static getFetchTime(h) {\r\n        const d = new Date();\r\n        d.setHours(d.getHours() - h);\r\n        return d.toISOString();\r\n    }\r\n\r\n    static genDefaultData(time) {\r\n        //\r\n        const timelineLength = ChartHelper.getTimelineLength(time);\r\n        const defaultData = [...Array(timelineLength)].map(_ => 0);\r\n        const gasData = defaultData.slice(0);\r\n        const flameData = defaultData.slice(0);\r\n        const labels = defaultData.slice(0).map((item, index) => {\r\n            const d = new Date();\r\n            if (time < 24) {\r\n                d.setMinutes(d.getMinutes() - (timelineLength - index))\r\n            } else {\r\n                d.setHours(d.getHours() - (timelineLength - index))\r\n            }\r\n            return this.getLabel({\r\n                date: d,\r\n            }, time)\r\n        })\r\n        return {\r\n            gasData, flameData, labels\r\n        }\r\n    }\r\n\r\n    // UPDATE \r\n    static getTimelineLength(time) {\r\n        let length = time < 24 ? time * 60 : time;\r\n        return length;\r\n    }\r\n\r\n    diffTime(date) {\r\n        let t = this.chartTimeInHour >= 24 ? 1000 * 60 : 1000 * 60 * 60;\r\n        return Math.ceil(Math.abs(new Date() - date) / t);\r\n    }\r\n\r\n\r\n    getTimelineIndex(item) {\r\n        const index = this.timelineLength - this.diffTime(new Date(item.date));\r\n        return index;\r\n    }\r\n\r\n    getTimelineIndexes(items) {\r\n        console.log('items length', items.length)\r\n        const indexCount = {}\r\n        items.forEach(item => {\r\n            const index = this.getTimelineIndex(item)\r\n            indexCount[index] = indexCount[index] + 1 || 1;\r\n        });\r\n        console.log('count', indexCount)\r\n        const indexes = Object.keys(indexCount);\r\n        console.log('indexes', indexes)\r\n        return indexes;\r\n    }\r\n}\r\nexport default ChartHelper;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nconst options = {\r\n    scales: {\r\n        y: {\r\n            beginAtZero: true\r\n        },\r\n\r\n    },\r\n    animation: {\r\n        duration: 0\r\n    },\r\n    responsive: true,\r\n    interaction: {\r\n        mode: 'index',\r\n        intersect: false,\r\n    },\r\n    stacked: false,\r\n    plugins: {\r\n        title: {\r\n            display: true,\r\n            text: 'Status Realtime Chart',\r\n            font: {\r\n                size: 22,\r\n                weight: 'bold',\r\n                lineHeight: 1.2,\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nconst StatusChart = ({ labels, gasData, flameData }) => {\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Gas',\r\n                data: gasData,\r\n                fill: false,\r\n                backgroundColor: '#dbdbdb',\r\n                borderColor: '#8c8c8c',\r\n            },\r\n            {\r\n                label: 'Flame',\r\n                data: flameData,\r\n                fill: false,\r\n                backgroundColor: '#FFB1C1',\r\n                borderColor: '#FF6384',\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Line height={75} data={data} options={options} />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default StatusChart;","import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport useSocket from 'use-socket.io-client';\r\nimport StatusApi from '../apis/StatusApi';\r\nimport { API_DOMAIN } from '../app_constant';\r\nimport ChartHelper from '../helper/ChartHeper';\r\nimport StatusChart from './StatusChart';\r\n\r\n\r\n\r\nexport default function RealtimeChart({ item: room, chartTimeInHour }) {\r\n    const [socket] = useSocket(API_DOMAIN);\r\n\r\n    const { flameData: defaultFlames, gasData: defaultGases, labels: defaultLabels } = ChartHelper.genDefaultData(chartTimeInHour);\r\n    const [gasData, setGasData] = useState(defaultGases);\r\n    const [flameData, setFlameData] = useState(defaultFlames);\r\n    const [labels, setLabels] = useState(defaultLabels);\r\n\r\n    // SOCKET\r\n    useEffect(() => {\r\n        socket.off(`SERVER_EMIT_ROOM_WITH_STATUS_${room._id}`);\r\n        socket.on(`SERVER_EMIT_ROOM_WITH_STATUS_${room._id}`, (data) => {\r\n            console.log('socket')\r\n            setGasData(items => {\r\n                const status = ChartHelper.getStatus(data, ['gas']);\r\n                return items.length === 0 ? [status] : [...items.slice(1), status];\r\n            })\r\n            setFlameData(items => {\r\n                const status = ChartHelper.getStatus(data, ['flame']);\r\n                return items.length === 0 ? [status] : [...items.slice(1), status];\r\n            })\r\n            setLabels(items => {\r\n                const lbl = ChartHelper.getLabel(data, chartTimeInHour);\r\n                return items.length === 0 ? [lbl] : [...items.slice(1), lbl];\r\n            })\r\n        });\r\n    }, [room._id, chartTimeInHour, socket])\r\n\r\n    // FETCHES\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            try {\r\n\r\n                // fetch\r\n                let items = await StatusApi.fetchLastItemsAfterTimeByRoomId(room._id, ChartHelper.getFetchTime(chartTimeInHour))\r\n                items = items.reverse();\r\n                const chartHelper = new ChartHelper(chartTimeInHour, items);\r\n\r\n                // gen data\r\n                const { gasData, flameData, labels } = chartHelper.genData(items);\r\n                setGasData(gasData);\r\n                setFlameData(flameData);\r\n                setLabels(labels);\r\n            } catch (e) {\r\n                console.error(e)\r\n            }\r\n        }\r\n        fetch();\r\n    }, [room._id, chartTimeInHour, setGasData, setLabels, setFlameData])\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <StatusChart gasData={gasData} flameData={flameData} labels={labels} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport RoomApi from '../apis/RoomApi';\r\nimport ChartTimeBar from '../components/ChartTimeBar';\r\nimport Clock from '../components/Clock';\r\nimport RealtimeChart from '../components/RealtimeChart';\r\n\r\nconst TitleWrapper = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-between;\r\n`;\r\nconst Image = styled.img`\r\n    aspect-ratio:3/2;\r\n    border-radius:10px;\r\n    max-width:100%;\r\n`\r\n\r\nexport default function RoomPage() {\r\n    const [item, setItem] = useState(undefined);\r\n    let { id } = useParams();\r\n    const [chartTimeInHour, setChartTimeInHour] = useState(1);\r\n    useEffect(() => {\r\n        const fetchItem = async () => {\r\n            const r = await RoomApi.fetchItemById(id)\r\n            setItem(r);\r\n        }\r\n        fetchItem();\r\n    }, [id, setItem]);\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                {\r\n                    !!item\r\n                        ?\r\n                        <>\r\n                            <div className=\"row mb-4\">\r\n                                <div className=\"col-12\">\r\n                                    <TitleWrapper>\r\n                                        <h1>{item.name}</h1>\r\n                                        <Clock />\r\n                                    </TitleWrapper>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"offset-lg-5 col-lg-2 mb-3\" >\r\n                                    <Image src={item.imageUrl} alt=\"\" />\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div>\r\n                                        <ChartTimeBar chartTimeInHour={chartTimeInHour} onTimeChange={setChartTimeInHour} />\r\n                                    </div>\r\n                                    <RealtimeChart chartTimeInHour={chartTimeInHour} item={item} />\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                        : null\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import './App.css';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\nimport HomePage from './pages/HomePage';\r\nimport RoomPage from './pages/RoomPage';\r\nimport { API_DOMAIN } from './app_constant';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    min-height:100vh;\r\n`;\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <HashRouter>\r\n            <Wrapper>\r\n                <Header></Header>\r\n\r\n                <div className=\"main\">\r\n                    <Switch>\r\n                        <Route path=\"/room/:id\">\r\n                            <RoomPage />\r\n                        </Route>\r\n                        <Route path=\"/\" exact>\r\n                            <HomePage />\r\n                        </Route>\r\n                        {/* <Route path=\"*\">\r\n                            <Redirect to=\"/\" />\r\n                        </Route> */}\r\n                    </Switch>\r\n                </div>\r\n\r\n                <Footer />\r\n            </Wrapper>\r\n        </HashRouter>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}